// Code generated by MockGen. DO NOT EDIT.
// Source: common/APIRequestUtil.go

package mocks

import (
	common "bitbucket.xant.tech/ci/ci-go-utils/common"
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockIAPIRequestUtil is a mock of IAPIRequestUtil interface
type MockIAPIRequestUtil struct {
	ctrl     *gomock.Controller
	recorder *MockIAPIRequestUtilMockRecorder
}

// MockIAPIRequestUtilMockRecorder is the mock recorder for MockIAPIRequestUtil
type MockIAPIRequestUtilMockRecorder struct {
	mock *MockIAPIRequestUtil
}

// NewMockIAPIRequestUtil creates a new mock instance
func NewMockIAPIRequestUtil(ctrl *gomock.Controller) *MockIAPIRequestUtil {
	mock := &MockIAPIRequestUtil{ctrl: ctrl}
	mock.recorder = &MockIAPIRequestUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockIAPIRequestUtil) EXPECT() *MockIAPIRequestUtilMockRecorder {
	return _m.recorder
}

// DoRequest mocks base method
func (_m *MockIAPIRequestUtil) DoRequest(req_formatter common.IRequestFormatter, url string, method string, requestBody interface{}) (*http.Response, common.IResult) {
	ret := _m.ctrl.Call(_m, "DoRequest", req_formatter, url, method, requestBody)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(common.IResult)
	return ret0, ret1
}

// DoRequest indicates an expected call of DoRequest
func (_mr *MockIAPIRequestUtilMockRecorder) DoRequest(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "DoRequest", reflect.TypeOf((*MockIAPIRequestUtil)(nil).DoRequest), arg0, arg1, arg2, arg3)
}

// RequestWithRetries mocks base method
func (_m *MockIAPIRequestUtil) RequestWithRetries(req_formatter common.IRequestFormatter, url string, method string, requestBody interface{}, valid_response_codes []int, expected_response_struct interface{}) (*http.Response, common.IResult) {
	ret := _m.ctrl.Call(_m, "RequestWithRetries", req_formatter, url, method, requestBody, valid_response_codes, expected_response_struct)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(common.IResult)
	return ret0, ret1
}

// RequestWithRetries indicates an expected call of RequestWithRetries
func (_mr *MockIAPIRequestUtilMockRecorder) RequestWithRetries(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "RequestWithRetries", reflect.TypeOf((*MockIAPIRequestUtil)(nil).RequestWithRetries), arg0, arg1, arg2, arg3, arg4, arg5)
}

// Request mocks base method
func (_m *MockIAPIRequestUtil) Request(req_formatter common.IRequestFormatter, url string, method string, requestBody interface{}, valid_response_codes []int, expected_response_struct interface{}) (*http.Response, common.IResult) {
	ret := _m.ctrl.Call(_m, "Request", req_formatter, url, method, requestBody, valid_response_codes, expected_response_struct)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(common.IResult)
	return ret0, ret1
}

// Request indicates an expected call of Request
func (_mr *MockIAPIRequestUtilMockRecorder) Request(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Request", reflect.TypeOf((*MockIAPIRequestUtil)(nil).Request), arg0, arg1, arg2, arg3, arg4, arg5)
}

// MockIRequestFormatter is a mock of common.IRequestFormatter interface
type MockIRequestFormatter struct {
	ctrl     *gomock.Controller
	recorder *MockIRequestFormatterMockRecorder
}

// MockIRequestFormatterMockRecorder is the mock recorder for MockIRequestFormatter
type MockIRequestFormatterMockRecorder struct {
	mock *MockIRequestFormatter
}

// NewMockIRequestFormatter creates a new mock instance
func NewMockIRequestFormatter(ctrl *gomock.Controller) *MockIRequestFormatter {
	mock := &MockIRequestFormatter{ctrl: ctrl}
	mock.recorder = &MockIRequestFormatterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockIRequestFormatter) EXPECT() *MockIRequestFormatterMockRecorder {
	return _m.recorder
}

// FormatRequest mocks base method
func (_m *MockIRequestFormatter) FormatRequest(_param0 *http.Request) {
	_m.ctrl.Call(_m, "FormatRequest", _param0)
}

// FormatRequest indicates an expected call of FormatRequest
func (_mr *MockIRequestFormatterMockRecorder) FormatRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "FormatRequest", reflect.TypeOf((*MockIRequestFormatter)(nil).FormatRequest), arg0)
}

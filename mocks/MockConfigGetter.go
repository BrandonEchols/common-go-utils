// Automatically generated by MockGen. DO NOT EDIT!
// Source: common/ConfigGetter.go

package mocks

import (
	"github.com/golang/mock/gomock"
)

// Mock of IConfigGetter interface
type MockIConfigGetter struct {
	ctrl     *gomock.Controller
	recorder *_MockIConfigGetterRecorder
}

// Recorder for MockIConfigGetter (not exported)
type _MockIConfigGetterRecorder struct {
	mock *MockIConfigGetter
}

func NewMockIConfigGetter(ctrl *gomock.Controller) *MockIConfigGetter {
	mock := &MockIConfigGetter{ctrl: ctrl}
	mock.recorder = &_MockIConfigGetterRecorder{mock}
	return mock
}

func (_m *MockIConfigGetter) EXPECT() *_MockIConfigGetterRecorder {
	return _m.recorder
}

func (_m *MockIConfigGetter) MustGetConfigVar(variableName string) string {
	ret := _m.ctrl.Call(_m, "MustGetConfigVar", variableName)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockIConfigGetterRecorder) MustGetConfigVar(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "MustGetConfigVar", arg0)
}

func (_m *MockIConfigGetter) SafeGetConfigVar(variableName string) string {
	ret := _m.ctrl.Call(_m, "SafeGetConfigVar", variableName)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockIConfigGetterRecorder) SafeGetConfigVar(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SafeGetConfigVar", arg0)
}
